{:system/env
 #profile {:dev :dev
           :test :test
           :prod :prod}

 :server/http
 {:port #long #or [#env PORT 3000]
  :host #or [#env HTTP_HOST "0.0.0.0"]
  :handler #ig/ref :handler/ring}

 :handler/ring
 {:router #ig/ref :router/core
  :api-path "/api"
  :cookie-secret #or [#env COOKIE_SECRET "FCBVIUVAVUOKTTXK"]
  ;; from ring.middleware.defaults. anti-forgery `false` by default because services may not require it
  :site-defaults-config {:params {:urlencoded true
                                  :multipart true
                                  :nested true
                                  :keywordize true}
                         :cookies true
                         :session {:flash true
                                   :cookie-name "realworld-clojure"
                                   :cookie-attrs {:max-age 86400
                                                  :http-only true
                                                  :same-site :strict}}
                         :security {:anti-forgery false
                                    :xss-protection {:enable? true,
                                                     :mode :block}
                                    :frame-options :sameorigin
                                    :content-type-options :nosniff}
                         :static {:resources "public"}
                         :responses {:not-modified-responses true
                                     :absolute-redirects true
                                     :content-types true
                                     :default-charset "utf-8"}}}

 :reitit.routes/api
 {:base-path "/api"
  :env #ig/ref :system/env
  :query-fn #ig/ref :db.sql/query-fn
  :use-cases {:user #ig/ref :use-case/user
              :article #ig/ref :use-case/article}
  :gateway {:token-gateway #ig/ref :gateway/jwt-token-gateway}
  :query-service #ig/ref :service/query-service}

 :router/routes
 {:routes #ig/refset :reitit/routes}

 :router/core
 {:routes #ig/ref :router/routes}

 :db.sql/query-fn
 {:conn #ig/ref :db.sql/connection,
  :options {},
  :filename "sql/queries.sql"}

 :db.sql/migrations
 {:store :database,
  :db {:datasource #ig/ref :db.sql/connection},
  :migrate-on-init? true}

 :db.sql/connection
 #profile {:dev {:jdbc-url "jdbc:postgresql://localhost:5432/realworld_clj?user=realworld&password="},
           :test {:jdbc-url "jdbc:postgresql://localhost:5432/realworld_clj_test?user=realworld&password=realworld"},
           :prod {:jdbc-url #env JDBC_URL}}

 :db/tx-manager {:conn #ig/ref :db.sql/connection
                 :query-fn #ig/ref :db.sql/query-fn}

 :use-case/user {:with-tx #ig/ref :db/tx-manager
                 :token-gateway #ig/ref :gateway/jwt-token-gateway
                 :password-gateway #ig/ref :gateway/bcrypt-password-gateway
                 :user-repository #ig/ref :repository/pg-user-repository}

 :use-case/article {:with-tx #ig/ref :db/tx-manager
                    :token-gateway #ig/ref :gateway/jwt-token-gateway
                    :user-repository #ig/ref :repository/pg-user-repository
                    :article-repository #ig/ref :repository/pg-article-repository
                    :favorite-repository #ig/ref :repository/pg-favorite-repository
                    :comment-repository #ig/ref :repository/pg-comment-repository}

 :repository/pg-article-repository {:query-fn #ig/ref :db.sql/query-fn
                                    :conn #ig/ref :db.sql/connection}

 :repository/pg-comment-repository {:query-fn #ig/ref :db.sql/query-fn}

 :repository/pg-favorite-repository {:query-fn #ig/ref :db.sql/query-fn}

 :repository/pg-user-repository {:query-fn #ig/ref :db.sql/query-fn}

 :gateway/jwt-token-gateway {:secret #or [#env JWT_SECRET "secret"]}

 :gateway/bcrypt-password-gateway {}

 :service/query-service {:query-fn #ig/ref :db.sql/query-fn}}
